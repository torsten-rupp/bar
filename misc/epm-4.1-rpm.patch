--- epm-4.1/rpm.c	2006-12-06 01:09:59.000000000 +0900
+++ epm-4.1-fix-rpm/rpm.c	2010-03-20 07:39:34.472861162 +0900
@@ -28,6 +28,8 @@
 
 #include "epm.h"
 
+#include <sys/types.h>
+#include <sys/wait.h>
 
 /*
  * Local functions...
@@ -42,6 +44,87 @@
 		           const char *subpackage);
 
 
+static char *rpm_version(const char *command,
+                         char       *version,
+                         int        maxVersionLength
+                        )
+{
+  int  pipe_stdio[2];
+  int  pid;
+  int  exitcode;
+  int  n;
+  char line[1024];
+  char *s;
+  int  z;
+
+  /* create pipe */
+  pipe(pipe_stdio);
+
+  /* exec with stdout-redirected into pipe */
+  pid = fork();
+  if (pid == 0)
+  {
+    close(STDIN_FILENO);
+    close(STDOUT_FILENO);
+    close(STDERR_FILENO);
+
+    dup2(pipe_stdio[1],STDIN_FILENO);
+    dup2(pipe_stdio[1],STDOUT_FILENO);
+
+    close(2);
+    dup2(2,pipe_stdio[1]); 
+    pid = execlp(command,command,"--version",NULL);
+    if (pid == -1)
+    {
+      exit(1);
+    }
+    close(pipe_stdio[1]);
+
+    exit(0);
+  }
+  close(pipe_stdio[1]);
+
+  /* wait process terminated */
+  waitpid(pid,&exitcode,0);
+  if (exitcode != 0)
+  {
+    close(pipe_stdio[0]);
+    return NULL;
+  }
+
+  /* read first line from pipe */
+  n = read(pipe_stdio[0],line,sizeof(line));
+  if (n < 0)
+  {
+    close(pipe_stdio[0]);
+    return NULL;
+  }
+  line[n] = '\0';
+
+  /* close pipe */
+  close(pipe_stdio[0]);
+
+  /* parse (get version number) */
+  s = line;
+  z = 0;
+  while (((*s) != '\0') && (z<maxVersionLength-1))
+  {
+    while (((*s) != '\0') && !isdigit((int)(*s)))
+    {
+      s++;
+    }
+    while (((*s) != '\0') && (isdigit((int)(*s)) || ((*s) == '.')) && (z<maxVersionLength-1))
+    {
+      version[z] = (*s);
+      s++;
+      z++;
+    }    
+  }
+  version[z] = '\0';
+
+  return version;
+}
+
 /*
  * 'make_rpm()' - Make a Red Hat software distribution package.
  */
@@ -67,6 +150,9 @@
   char		absdir[1024];		/* Absolute directory */
   char		rpmdir[1024];		/* RPMDIR env var */
   char		release[256];		/* Release: number */
+  char          rpmversion[1024];       /* rpmbuild/rpm-version string */
+  int           rpmVersion,rpmRelease,rpmRevision;
+  char		rpmcommand[1024];	/* rpm-command */
 
 
   if (Verbosity)
@@ -231,6 +317,42 @@
     }
   }
 
+  /* detect rpm program and parameters */
+  if      (rpm_version("rpmbuild",rpmversion,sizeof(rpmversion)) != NULL)
+  {
+    snprintf(rpmcommand,sizeof(rpmcommand),"rpmbuild %%s -bb --buildroot %s/buildroot --target %%s %%s",absdir);
+  }
+  else if (rpm_version("rpm",rpmversion,sizeof(rpmversion)) != NULL)
+  {
+    if (sscanf(rpmversion,"%d.%d.%d",&rpmVersion,&rpmRelease,&rpmRevision)==3)
+    {
+    }
+    else if (sscanf(rpmversion,"%d.%d",&rpmVersion,&rpmRelease)==2)
+    {
+      rpmRevision = 0;
+    }
+    else
+    {
+      return 1;
+    }
+    if (rpmVersion < 3)
+    {
+      strncpy(rpmcommand,"rpm %s -bb --buildarch %s %s",sizeof(rpmcommand));
+    }
+    else if ((rpmVersion > 4) || ((rpmVersion == 4) && (rpmRevision >= 3)))
+    {
+      strncpy(rpmcommand,"rpm %s -bb --target %s %s",sizeof(rpmcommand));
+    }
+    else
+    {
+      strncpy(rpmcommand,"rpm %s -bb --target=%s %s",sizeof(rpmcommand));
+    }
+  }
+  else
+  {
+    return (1);
+  }
+
  /*
   * Build the distribution from the spec file...
   */
@@ -238,21 +360,33 @@
   if (Verbosity)
     puts("Building RPM binary distribution...");
 
+  run_command(NULL, "/bin/mkdir %s/BUILD", directory);
   if (!strcmp(platform->machine, "intel"))
   {
-    if (run_command(NULL, EPM_RPMBUILD " -bb " EPM_RPMARCH "i386 %s",
-                    specname))
+    if (run_command(NULL,
+                    rpmcommand,
+                    Verbosity == 0 ? "--quiet" : "",
+                    "i386",specname                 ))
       return (1);
   }
   else if (!strcmp(platform->machine, "ppc"))
   {
+    if (run_command(NULL,
+                    rpmcommand,
+                    Verbosity == 0 ? "--quiet" : "",
+                    "powerpc",specname                 ))
     if (run_command(NULL, EPM_RPMBUILD " -bb " EPM_RPMARCH "powerpc %s",
                     specname))
       return (1);
   }
-  else if (run_command(NULL, EPM_RPMBUILD " -bb " EPM_RPMARCH "%s %s",
-                       platform->machine, specname))
-    return (1);
+  else
+  {
+    if (run_command(NULL,
+                    rpmcommand,
+                    Verbosity == 0 ? "--quiet" : "",
+                    platform->machine,specname                 ))
+      return (1);
+  }
 
  /*
   * Move the RPMs to the local directory and rename the RPMs using the
@@ -467,6 +601,7 @@
     run_command(NULL, "/bin/rm -rf %s/RPMS", directory);
     run_command(NULL, "/bin/rm -f %s/rpms", directory);
     run_command(NULL, "/bin/rm -rf %s/buildroot", directory);
+    run_command(NULL, "/bin/rm -rf %s/BUILD", directory);
 
     unlink(specname);
 

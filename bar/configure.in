dnl --------------------------------------------------------------------
dnl
dnl $Source: /home/torsten/cvs/bar/configure.in,v $
dnl $Revision$
dnl $Author$
dnl Contents: BAR auto-configure script
dnl
dnl --------------------------------------------------------------------

dnl ----------------------- additional macros --------------------------


dnl --- print compile info
AC_DEFUN([AC_MSG_COMPILE],
[
  _AS_ECHO_N([Compile $1... ])
])

dnl --- check 
AC_DEFUN([AC_SEARCH_STATIC_LIBS],
[
  AS_VAR_PUSHDEF([ac_search_static], [ac_cv_search_static_$1])dnl
  AC_CACHE_CHECK(
    [for static library containing $1],
    [ac_search_static],
    [
     ac_func_search_static_save_CFLAGS="$CFLAGS"; CFLAGS="$CFLAGS -static"
     ac_func_search_static_save_LIBS=$LIBS
     AC_LANG_CONFTEST([AC_LANG_CALL([], [$1])])
     for ac_lib in '' $2; do
       if test -z "$ac_lib"; then
         ac_res="none required"
       else
         ac_res=-l$ac_lib
         LIBS="-l$ac_lib $5 $ac_func_search_save_LIBS"
       fi
       AC_LINK_IFELSE([], [AS_VAR_SET([ac_search_static], [$ac_res])])
       AS_VAR_SET_IF([ac_search_static], [break])
     done
     AS_VAR_SET_IF([ac_search_static], , [AS_VAR_SET([ac_search_static], [no])])
     rm conftest.$ac_ext
     LIBS=$ac_func_search_save_LIBS
     CFLAGS=$ac_func_search_static_save_CFLAGS
   ]
  )
  AS_VAR_COPY([ac_res], [ac_search_static])
  AS_IF([test "$ac_res" != no],[test "$ac_res" = "none required" || LIBS="$ac_res $LIBS" $3],[$4])
  AS_VAR_POPDEF([ac_search_static])dnl
])


dnl --- check if C compiler long long data type available
# (original macro from http://ac-archive.sourceforge.net/C_Support/ac_c_long_long.html)
AC_DEFUN([AC_C_LONG_LONG],
[
  AC_CACHE_CHECK(
    [for long long int],
    ac_cv_c_long_long,
    [
      if test "$GCC" = yes; then
        ac_cv_c_long_long=yes
      else
        AC_TRY_COMPILE(,[long long int i;],
        ac_cv_c_long_long=yes,
        ac_cv_c_long_long=no)
      fi
    ]
  )
  AS_IF([test $ac_cv_c_long_long = yes],[$1],[$2])dnl
  AC_PROVIDE([$0])dnl
])

dnl extend C compiler defines for large files
AC_DEFUN([AC_CHECK_LARGEFILE_DEFINES],
[
  AC_SYS_LARGEFILE
  AC_CACHE_CHECK(
    [for needed large files defines],
    ac_cv_largefile_defines,
    [
      cat << \EOF > conftest.c
#include <stdlib.h>
#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
int main(void) { printf("%p",fseeko64); return 0; }
EOF
      ${CC} ${CFLAGS} -Wall -Werror -c conftest.c -o conftest.o 1>/dev/null 2>/dev/null; rc=$?
      if test $rc -eq 0; then
        ac_cv_largefile_defines=""
      else
        ${CC} ${CFLAGS} -Wall -Werror -D_LARGEFILE64_SOURCE -c conftest.c -o conftest.o 1>/dev/null 2>/dev/null; rc=$?
        if test $rc -eq 0; then
          ac_cv_largefile_defines="_LARGEFILE64_SOURCE"
        else
          ac_cv_largefile_defines=""
        fi
        if test "$ac_cv_sys_file_offset_bits" != "no"; then
          ac_cv_largefile_defines="$ac_cv_largefile_defines _FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits"
        fi
      fi
      rm -f conftest.c conftest.o
      CC_DEFINES="$CC_DEFINES $ac_cv_largefile_defines"
    ]
  )dnl
  AC_PROVIDE([$0])dnl
])

dnl extend C compiler defines for pthreads
AC_DEFUN([AC_CHECK_PTHREAD_DEFINES],
[
  AC_CACHE_CHECK(
    [for needed pthread defines],
    ac_cv_extended_pthread_defines,
    [
      cat << \EOF > conftest.c
#include <stdlib.h>
#include <stdio.h>
#include <pthread.h>
int main(void) { printf("%p",pthread_mutexattr_settype); return 0; }
EOF
      ${CC} ${CFLAGS} -Wall -Werror -c conftest.c -o conftest.o 1>/dev/null 2>/dev/null; rc=$?
      if test $rc -eq 0; then
        ac_cv_extended_pthread_defines=""
      else
        ${CC} ${CFLAGS} -Wall -Werror -D_GNU_SOURCE -c conftest.c -o conftest.o 1>/dev/null 2>/dev/null; rc=$?
        if test $rc -eq 0; then
          ac_cv_extended_pthread_defines="_GNU_SOURCE"
        else
          ac_cv_extended_pthread_defines=""
        fi
      fi
      rm -f conftest.c conftest.o
      CC_DEFINES="$CC_DEFINES $ac_cv_extended_pthread_defines"
    ]
  )dnl
  AC_PROVIDE([$0])dnl
])

dnl detect Java version
AC_DEFUN([AC_JAVA_VERSION],
[
  AC_CACHE_CHECK(
    [$JAVA version],
    ac_cv_prog_java_version,
    [
      cat << \EOF > Test.java
class Test
{
  public static void main(String[[]] args)
  {
    System.out.println(System.getProperty("java.version"));
  }
}
EOF
      if AC_TRY_COMMAND($JAVAC $JAVAC_FLAGS Test.java) && test -s Test.class; then
        ac_cv_prog_java_version=`$JAVA $JAVA_FLAGS Test`
      else
        ac_cv_prog_java_version=""
      fi
      AS_VAR_SET($1,$ac_cv_prog_java_version)

      rm -f Test.java Test.class
    ]
  )
  AC_PROVIDE([$0])dnl
])

dnl detect Java model (32/64 bit)
AC_DEFUN([AC_JAVA_DATA_MODEL],
[
  AC_CACHE_CHECK(
    [$JAVA data model],
    ac_cv_prog_java_data_model,
    [
      cat << \EOF > Test.java
class Test
{
  public static void main(String[[]] args)
  {
    System.out.println(System.getProperty("sun.arch.data.model"));
  }
}
EOF
      if AC_TRY_COMMAND($JAVAC $JAVAC_FLAGS Test.java) && test -s Test.class; then
        ac_cv_prog_java_data_model=`$JAVA $JAVA_FLAGS Test`
      else
        ac_cv_prog_java_data_model=32
      fi
      AS_VAR_SET($1,$ac_cv_prog_java_data_model)

      rm -f Test.java Test.class
    ]
  )
  AC_PROVIDE([$0])dnl
])

# detect EPM version
AC_DEFUN([AC_PROG_EPM_VERSION],
[
  AC_MSG_CHECKING([$EPM version])
  AC_CACHE_VAL(
    ac_cv_prog_epm_version,
    [
      if   test -n "`$EPM --version 2>/dev/null | grep \"ESP Package Manager v4\"`"; then
        AC_MSG_RESULT([4.x])
        ac_cv_prog_epm_version="4.x"
        EPM_VERSION_4=1
        EPM_VERSION_3=
      elif test -n "`$EPM --version 2>/dev/null | grep \"ESP Package Manager v3\"`"; then
        AC_MSG_RESULT([3.x])
        ac_cv_prog_epm_version="3.x"
        EPM_VERSION_4=
        EPM_VERSION_3=1
      else
        AC_MSG_RESULT([unknown - assume version 4 or newer])
        ac_cv_prog_epm_version="unknown"
        EPM_VERSION_4=1
        EPM_VERSION_3=
      fi
    ]
  )
  AC_PROVIDE([$0])dnl
])

dnl ------------------------- basic settings ---------------------------

dnl --- initialize autoconf
AC_INIT(.)
AC_PREREQ(2.53)

dnl --- set source-directory (specify existing source file)
AC_CONFIG_SRCDIR(bar/bar.c)

dnl --- install-sh, config.sub and config.guess are in this directory.
AC_CONFIG_AUX_DIR(bin)

dnl --- check bost system
AC_CANONICAL_HOST

dnl AC_PRESERVE_HELP_ORDER

dnl ----------------------- substitute settings ------------------------

AC_SUBST(VERSION_MAJOR)                     dnl version major number
AC_SUBST(VERSION_MINOR)                     dnl version minor number

AC_SUBST(COPYRIGHT_DATE)                    dnl copyright date

AC_SUBST(PLATFORM)                          dnl platform name

AC_SUBST(FILE_SEPARATOR_CHAR)               dnl file separator path character (/ or \)

AC_SUBST(ENABLE_DEBUG)                      dnl "yes" for debug version, "no" otherwise
AC_SUBST(ENABLE_BZIP2)                      dnl "yes" for bzip2 support, "no" otherwise
AC_SUBST(ENABLE_LZMA)                       dnl "yes" for lzma support, "no" otherwise
AC_SUBST(ENABLE_XDELTA3)                    dnl "yes" for xdelta3 support, "no" otherwise
AC_SUBST(ENABLE_GCRYPT)                     dnl "yes" for gcrypt support, "no" otherwise
AC_SUBST(ENABLE_FTP)                        dnl "yes" for ftp support, "no" otherwise
AC_SUBST(ENABLE_SSH)                        dnl "yes" for ssh support, "no" otherwise
AC_SUBST(ENABLE_TLS)                        dnl "yes" for tls support, "no" otherwise
AC_SUBST(ENABLE_ISO9660)                    dnl "yes" for iso9660 support, "no" otherwise
AC_SUBST(ENABLE_GUI)                        dnl "yes" for GUI support, "no" otherwise

AC_SUBST(HAVE_BZ2)                          dnl "1" for bzip2 support, "" otherwise
AC_SUBST(HAVE_LZMA)                         dnl "1" for lzma support, "" otherwise
AC_SUBST(HAVE_XDELTA)                       dnl "1" for xdelta support, "" otherwise
AC_SUBST(HAVE_GCRYPT)                       dnl "1" for gcrypt support, "" otherwise

AC_SUBST(INSTALL_DIR)                       dnl installation directory
AC_SUBST(INSTALL_BIN_DIR)                   dnl installation directory for binaries
AC_SUBST(CONFIG_DIR)                        dnl configuration directory
AC_SUBST(TLS_DIR)                           dnl TLS/SSL directory
AC_SUBST(MAN_DIR)                           dnl man page directory

AC_SUBST(CC)                                dnl C compiler
AC_SUBST(LD)                                dnl linker
AC_SUBST(STRIP)                             dnl strip

AC_SUBST(CC_FLAGS)                          dnl C compiler flags
AC_SUBST(CC_WARN_FLAGS)                     dnl C compiler warning flags
AC_SUBST(CC_OPTIMIZE)                       dnl C compiler optimization flags
AC_SUBST(CC_DEFINES)                        dnl C compiler defines
AC_SUBST(CC_INCLUDES)                       dnl C compiler include paths

AC_SUBST(LD_FLAGS)                          dnl linker flags

AC_SUBST(LIBRARY_PATHS)                     dnl library paths
AC_SUBST(LIBRARIES)                         dnl libraries to link
AC_SUBST(STATIC_LIBRARIES)                  dnl libraries to link static

AC_SUBST(JAVA)                              dnl java command
AC_SUBST(JAVAC)                             dnl java compiler
AC_SUBST(JAR)                               dnl jar command

AC_SUBST(JAVA_DATA_MODEL)                   dnl java data model (32 or 64)
AC_SUBST(JAVA_FLAGS)                        dnl java flags
AC_SUBST(JAVAC_FLAGS)                       dnl java compiler flags
AC_SUBST(JAVA_PATH_SEPARATOR_CHAR)          dnl java path separator (: or ;)

AC_SUBST(SWT_DIR)                           dnl SWT directory
AC_SUBST(LAUNCH4J_DIR)                      dnl launch4j directory

AC_SUBST(CERTOOL)                           dnl GNU TLS certtool
AC_SUBST(OPENSSL)                           dnl OpenSSL key tool
AC_SUBST(KEYTOOL)                           dnl Java keytool

AC_SUBST(UNOCONV)                           dnl OO conversion tool
AC_SUBST(TXT2MAN)                           dnl text-to-man page tool

AC_SUBST(MKFS_EXT2)                         dnl mksfs.ext2 command
AC_SUBST(MKFS_EXT3)                         dnl mksfs.ext3 command
AC_SUBST(MKFS_EXT4)                         dnl mksfs.ext4 command
AC_SUBST(MKFS_MSDOS)                        dnl mksfs.msdos command
AC_SUBST(MKFS_REISERFS)                     dnl mksfs.reiserfs command
AC_SUBST(MKFS_REISER4)                      dnl mksfs.reiser4 command

AC_SUBST(TIME)                              dnl time command

AC_SUBST(EPM)                               dnl EPM tool
AC_SUBST(EPM_VERSION_3)                     dnl 1 if EPM version 3, otherwise empty
AC_SUBST(EPM_VERSION_4)                     dnl 1 if EPM version 4, otherwise empty

dnl ----------------------- initialize variables -----------------------

CC_FLAGS=""
CC_DEFINES=""
CC_OPTIMIZE=""
CC_INCLUDES=""

LD_FLAGS=""
LIBRARY_PATHS=""
LIBRARIES=""
STATIC_LIBRARIES=""

ENABLE_DEBUG="no"
ENABLE_LINK_DYNAMIC="no"
ENABLE_BZIP2="yes"
ENABLE_LZMA="yes"
ENABLE_XDELTA3="yes"
ENABLE_GCRYPT="yes"
ENABLE_FTP="yes"
ENABLE_SSH="yes"
ENABLE_TLS="yes"
ENABLE_ISO9660="yes"
ENABLE_GUI="yes"
ENABLE_PACKAGE_COMPILE="yes"   

dnl ---------------------------- check system --------------------------

case "$host_os" in
  linux-*)
    PLATFORM=Linux
    FILE_SEPARATOR_CHAR="/"
    JAVA_PATH_SEPARATOR=":"
    ;;
  windows*)
    PLATFORM=Windows
    FILE_SEPARATOR_CHAR="\"
    JAVA_PATH_SEPARATOR=";"
    ;;
  mingw*)
    PLATFORM=Windows
    FILE_SEPARATOR_CHAR="\"
    JAVA_PATH_SEPARATOR=";"
    ;;
  sunos | solaris*)
    PLATFORM=Solaris
    FILE_SEPARATOR_CHAR="/"
    JAVA_PATH_SEPARATOR=":"
    ;;
  darwin*)
    PLATFORM=MacOSX
    FILE_SEPARATOR_CHAR="/"
    JAVA_PATH_SEPARATOR=":"
    ;;
  *)
    AC_MSG_ERROR([unknown host operation system '$host_os'. Please specify host as (cpu-vendor-os or cpu-os). Supported host operating systems: $host_supported_os])
    ;;
esac

dnl ---------------------------- directories ---------------------------

dnl --------------------- --with/--without options ---------------------

AC_ARG_WITH(
  config-dir,
  AC_HELP_STRING([--with-config-dir=<path>],[configuration directory (default: /etc/bar)]),
  [CONFIG_DIR=$withval],
  [CONFIG_DIR=/etc/bar]
)
AC_ARG_WITH(
  tls-dir,
  AC_HELP_STRING([--with-tls-dir=<path>],[TLS/SLL configuration and certificate directory (default: /etc/ssl)]),
  [TLS_DIR=$withval],
  [TLS_DIR=/etc/ssl]
)
AC_ARG_WITH(
  swt-dir,
  AC_HELP_STRING([--with-swt-dir=<path>],[SWT directory]),
  [SWT_DIR=$withval]
)
AC_ARG_WITH(
  launch4j-dir,
  AC_HELP_STRING([--with-launch4j-dir=<path>],[launch4j directory]),
  [LAUNCH4J_DIR=$withval]
)

dnl ------------------- --enable/--disable options ---------------------

AC_ARG_ENABLE(
  debug,
  AC_HELP_STRING([--enable-debug],[enable debug version]),
  [ENABLE_DEBUG=$enableval]
)
AC_ARG_ENABLE(
  link-static,
  AC_HELP_STRING([--disable-link-static],[disable static linkage (same as --enable-link-dynamic)]),
  [if test "$enableval" = "no"; then ENABLE_LINK_DYNAMIC=yes; fi]
)
AC_ARG_ENABLE(
  link-dynamic,
  AC_HELP_STRING([--enable-link-dynamic],[enable dynamic linkage (same as --disable-link-static)]),
  [ENABLE_LINK_DYNAMIC=$enableval]
)
AC_ARG_ENABLE(
  bzip2,
  AC_HELP_STRING([--disable-bzip2],[disable bzip2 support]),
  [ENABLE_BZIP2=$enableval]
)
AC_ARG_ENABLE(
  lzma,
  AC_HELP_STRING([--disable-lzma],[disable lzma support]),
  [ENABLE_LZMA=$enableval]
)
AC_ARG_ENABLE(
  xdelta3,
  AC_HELP_STRING([--disable-xdelta3],[disable xdelta3 support]),
  [ENABLE_XDELTA3=$enableval]
)
AC_ARG_ENABLE(
  gcrypt,
  AC_HELP_STRING([--disable-gcrypt],[disable gcrypt support]),
  [ENABLE_GCRYPT=$enableval]
)
AC_ARG_ENABLE(
  ftp,
  AC_HELP_STRING([--disable-ftp],[disable FTP support]),
  [ENABLE_FTP=$enableval]
)
AC_ARG_ENABLE(
  ssh,
  AC_HELP_STRING([--disable-ssh],[disable SSH support]),
  [ENABLE_SSH=$enableval]
)
AC_ARG_ENABLE(
  tls,
  AC_HELP_STRING([--disable-tls],[disable TLS support]),
  [ENABLE_TLS=$enableval]
)
AC_ARG_ENABLE(
  iso9660,
  AC_HELP_STRING([--disable-iso9660],[disable ISO 9660 support (barcontrol)]),
  [ENABLE_ISO9660=$enableval]
)
AC_ARG_ENABLE(
  gui,
  AC_HELP_STRING([--disable-gui],[disable GUI support (barcontrol)]),
  [ENABLE_GUI=$enableval]
)
AC_ARG_ENABLE(
  package-compile,
  AC_HELP_STRING([--disable-package-compile],[disable compilation of external packages]),
  [ENABLE_PACKAGE_COMPILE=$enableval]
)

if test $ENABLE_TLS = "yes" -a ! $ENABLE_GCRYPT = "yes"; then
  AC_MSG_WARN([gcrypt no enabled, disabled TLS support.])
  ENABLE_TLS=no
fi

dnl ------------------------------ programs ----------------------------

if test -z "$CC"; then
  AC_PATH_PROGS(CC,gcc cc)
fi
if test -z "$LD"; then
  AC_PATH_PROGS(LD,ld gcc)
fi
if test -z "$STRIP"; then
  AC_PATH_PROGS(STRIP,strip)
fi

AC_PATH_PROGS(PERL,perl)
if test -z "$PERL"; then
  AC_MSG_ERROR([Cannot find a 'perl' in PATH. Please check your PATH environment variable.])
fi
AC_PROG_INSTALL
if test -z "$INSTALL"; then
  AC_MSG_ERROR([Cannot find a 'install' in PATH. Please check your PATH environment variable.])
fi
if test -d epm -o -d "`readlink epm`"; then
  if test "$ENABLE_PACKAGE_COMPILE" = "yes"; then
    dnl compile epm

    cwd=`pwd`

    AC_MSG_COMPILE([epm])
    result=1
    if test $result -eq 1; then
      (cd epm; ./configure --prefix=$cwd/packages) 1>/dev/null 2>/dev/null
      if test $? -ne 0; then 
        AC_MSG_RESULT([fail (configure)])
        result=0
      fi
    fi
    if test $result -eq 1; then
      (cd epm; make clean; make) 1>/dev/null 2>/dev/null
      if test $? -ne 0; then 
        AC_MSG_RESULT([fail (make)])
        result=0
      fi
    fi
    if test $result -eq 1; then
      (cd epm; make install PREFIX=$cwd/packages) 1>/dev/null 2>/dev/null
      if test $? -ne 0; then 
        AC_MSG_RESULT([fail (make)])
        result=0
      fi
    fi
    if test $result -eq 1; then
      AC_MSG_RESULT([done])
    fi
  fi

  EPM=$cwd/packages/bin/epm
else
  AC_PATH_PROGS(EPM,epm)
fi
if test -n "$EPM"; then
  AC_PROG_EPM_VERSION
fi

AC_PATH_PROGS(MD5SUM,md5sum)

CC_DEFINES="$CC_DEFINES"
if test "$ENABLE_DEBUG" = "yes"; then
  CC_OPTIMIZE="$CC_OPTIMIZE -O0"
else
  dnl Check: bug in gcc with -fschedule-insns2? If -O2 is used and -fno-schedule-insns2 is
  dnl        not given, the program either crashes or parsing a string with %y seems to fail.
  CC_OPTIMIZE="$CC_OPTIMIZE -O2 -fno-schedule-insns2"
  CC_DEFINES="$CC_DEFINES NDEBUG"
fi
CC_INCLUDES="$CC_INCLUDES"

LD_FLAGS=""
if test ! $ENABLE_LINK_DYNAMIC = "yes"; then
  LD_FLAGS="-static-libgcc"
fi
if test "$ENABLE_DEBUG" = "yes"; then
  LD_FLAGS="$LD_FLAGS -rdynamic"
fi
LIBRARY_PATHS="$LIBRARY_PATHS /usr/local/lib"

if test "$ENABLE_GUI" = "yes"; then
  AC_PATH_PROGS(JAVA,java)
  if test -z "$JAVA"; then
    AC_MSG_WARN([No 'java' command found in path - cannot execute GUI])
    ENABLE_GUI="no"
  fi
  AC_PATH_PROGS(JAVAC,javac)
  if test -z "$JAVAC"; then
    AC_MSG_WARN([No 'javac' command found in path - cannot compile GUI])
    ENABLE_GUI="no"
  fi
  AC_PATH_PROGS(JAR,jar)
  if test -z "$JAVAC"; then
    AC_MSG_WARN([No 'jar' command found in path - cannot compile GUI])
    ENABLE_GUI="no"
  fi
  AC_PATH_PROGS(LAUNCH4J,launch4j)

  if test -n "$JAVA"; then
    AC_JAVA_VERSION(JAVA_VERSION)
    case "$JAVA_VERSION" in
      1.6*)
        ;;
      1.7*)
        ;;
      *)
        AC_MSG_WARN([Insufficient Java version (found $JAVA_VERSION, require 1.6 or newer) - disabled compile GUI])
        ENABLE_GUI="no"
        ;;
    esac
  fi

  if test -n "$JAVAC" -a -n "$JAVA"; then
    AC_JAVA_DATA_MODEL(JAVA_DATA_MODEL)
  fi

  JAVA_FLAGS=""
  if test "$ENABLE_DEBUG" = "yes"; then
    JAVA_FLAGS="-enableassertions"
  fi
  if test "$ENABLE_DEBUG" = "yes"; then
    JAVAC_FLAGS="-g"
  fi
fi

AC_PATH_PROGS(CERTTOOL,certtool)
AC_PATH_PROGS(OPENSSL,openssl)
AC_PATH_PROGS(KEYTOOL,keytool)

AC_PATH_PROGS(UNOCONV,unoconv)
if test -z "$UNOCONV"; then
  AC_MSG_WARN([No 'unoconv' tool found. Cannot create PDF manual. Please check PATH or create PDF manual manually in OO.])
fi
AC_PATH_PROGS(TXT2MAN,txt2man)
if test -z "$TXT2MAN"; then
  AC_MSG_WARN([No 'txt2man' tool found. Cannot create man page. Please check PATH.])
fi

AC_PATH_PROGS(MKFS_EXT2,    mkfs.ext2,    ,/sbin)
AC_PATH_PROGS(MKFS_EXT3,    mkfs.ext3,    ,/sbin)
AC_PATH_PROGS(MKFS_EXT4,    mkfs.ext4,    ,/sbin)
AC_PATH_PROGS(MKFS_MSDOS,   mkfs.msdos,   ,/sbin)
AC_PATH_PROGS(MKFS_REISERFS,mkfs.reiserfs,,/sbin)
AC_PATH_PROGS(MKFS_REISER4, mkfs.reiser4, ,/sbin)

AC_PATH_PROGS(TIME,time,,/usr/bin)

dnl -------------- headers/functions/definitions/libraries -------------

# set variables for tests
CFLAGS="$CC_FLAGS"
for z in $CC_DEFINES ""; do
  if test -n "$z"; then
    CFLAGS="$CFLAGS -D$z"
  fi
done
for z in $CC_INCLUDES ""; do
  if test -n "$z"; then
    CFLAGS="$CFLAGS -I$z"
  fi
done
LDFLAGS="$LD_FLAGS"
for z in $LIBRARY_PATHS ""; do
  if test -n "$z"; then
    LDFLAGS="$LDFLAGS -L$z"
  fi
done

AC_CHECK_HEADERS(stdbool.h)

AC_C_LONG_LONG(AC_DEFINE(HAVE_LONG_LONG,1,[defined if long long data type available]),AC_MSG_ERROR(long long data type not available))
AC_TRY_COMPILE([#include <limits.h>],[long long int x=LLONG_MIN;],AC_DEFINE(HAVE_LLONG_MIN,1,[defined if LLONG_MIN is available]))
AC_TRY_COMPILE([#include <limits.h>],[long long int x=LLONG_MAX;],AC_DEFINE(HAVE_LLONG_MAX,1,[defined if LLONG_MAX is available]))
AC_TRY_COMPILE([#include <limits.h>],[unsigned long long int x=ULLONG_MAX;],AC_DEFINE(HAVE_ULLONG_MAX,1,[defined if ULLONG_MAX is available]))
dnl AC_SYS_LARGEFILE
dnl echo ---
dnl echo "ac_cv_sys_file_offset_bits=$ac_cv_sys_file_offset_bits"
dnl echo "ac_cv_sys_large_files~$ac_cv_sys_large_files"
dnl echo "ac_cv_sys_largefile_CC=$ac_cv_sys_largefile_CC"
dnl echo -----------
AC_CHECK_LARGEFILE_DEFINES
AC_CHECK_SIZEOF(void *)

AC_SEARCH_LIBS(round,m,,AC_ERROR([m library not found]))
AC_SEARCH_LIBS(pthread_create,pthread,,AC_ERROR([pthread library not found]))
AC_SEARCH_LIBS(dlopen,dl,[LIBRARIES="$LIBRARIES dl"])

# optional packages
cwd=`pwd`
CC_INCLUDES="$CC_INCLUDES $cwd/packages/include"
LIBRARY_PATHS="$LIBRARY_PATHS $cwd/packages/lib"

if test -d zlib -o -d "`readlink zlib`"; then
  if test "$ENABLE_PACKAGE_COMPILE" = "yes"; then
    dnl compile zlib library

    mkdir packages 2>/dev/null
    mkdir packages/include 2>/dev/null
    mkdir packages/lib 2>/dev/null
    cwd=`pwd`

    AC_MSG_COMPILE([zlib])
    result=1
    if test $result -eq 1; then
      (cd zlib; ./configure --prefix=$cwd/packages) 1>/dev/null 2>/dev/null
      if test $? -ne 0; then 
        AC_MSG_RESULT([fail (configure)])
        result=0
      fi
    fi
    if test $result -eq 1; then
      (cd zlib; make clean; make) 1>/dev/null 2>/dev/null
      if test $? -ne 0; then 
        AC_MSG_RESULT([fail (make)])
        result=0
      fi
    fi
    if test $result -eq 1; then
      (cd zlib; make install PREFIX=$cwd/packages) 1>/dev/null 2>/dev/null
      if test $? -ne 0; then 
        AC_MSG_RESULT([fail (make)])
        result=0
      fi
    fi
    if test $result -eq 1; then
      AC_MSG_RESULT([done])
    fi
  else
    result=1
  fi

  if test $result -eq 1; then
    HAVE_Z=1
    CC_INCLUDES="$CC_INCLUDES $cwd/packages/include"
    LIBRARY_PATHS="$LIBRARY_PATHS $cwd/packages/lib"
    STATIC_LIBRARIES="$STATIC_LIBRARIES z"
    AC_DEFINE(HAVE_Z,1,[zlib installed (local)])
  fi
else
  dnl search for installed zlib library
  if test $ENABLE_LINK_DYNAMIC = "yes"; then
    AC_SEARCH_LIBS(zlibVersion,z,[HAVE_Z=1;LIBRARIES="$LIBRARIES z";AC_DEFINE(HAVE_Z,1,[z installed])])
  else
    if test -z "$HAVE_Z"; then
      AC_SEARCH_STATIC_LIBS(zlibVersion,z,[HAVE_Z=1;STATIC_LIBRARIES="$STATIC_LIBRARIES z";AC_DEFINE(HAVE_Z,1,[z installed])])
    fi
    if test -z "$HAVE_Z"; then
      AC_SEARCH_LIBS(zlibVersion,z,[HAVE_Z=1;LIBRARIES="$LIBRARIES z";AC_DEFINE(HAVE_Z,1,[z installed])])
    fi
  fi
fi

if test $ENABLE_BZIP2 = "yes"; then
  if test -d bzip2 -o -d "`readlink bzip2`"; then
    if test "$ENABLE_PACKAGE_COMPILE" = "yes"; then
      dnl compile bzip2 library

      mkdir packages 2>/dev/null
      mkdir packages/include 2>/dev/null
      mkdir packages/lib 2>/dev/null
      cwd=`pwd`

      AC_MSG_COMPILE([bzip2])
      result=1
      if test $result -eq 1; then
        (cd bzip2; make clean; make) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (make)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        (cd bzip2; make install PREFIX=$cwd/packages) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (make)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        AC_MSG_RESULT([done])
      fi
    else
      result=1
    fi

    if test $result -eq 1; then
      HAVE_BZ2=1
      CC_INCLUDES="$CC_INCLUDES $cwd/packages/include"
      LIBRARY_PATHS="$LIBRARY_PATHS $cwd/packages/lib"
      STATIC_LIBRARIES="$STATIC_LIBRARIES bz2"
      AC_DEFINE(HAVE_BZ2,1,[bzip2 installed (local)])
    fi
  else
    dnl search for installed bzip2 library
    if test $ENABLE_LINK_DYNAMIC = "yes"; then
      AC_SEARCH_LIBS(BZ2_bzCompressInit,bz2,[HAVE_BZ2=1;LIBRARIES="$LIBRARIES bz2";AC_DEFINE(HAVE_BZ2,1,[bzip2 installed])])
    else
      if test -z "$HAVE_BZ2"; then
        AC_SEARCH_STATIC_LIBS(BZ2_bzCompressInit,bz2,[HAVE_BZ2=1;STATIC_LIBRARIES="$STATIC_LIBRARIES bz2";AC_DEFINE(HAVE_BZ2,1,[static bzip2 installed])])
      fi
      if test -z "$HAVE_BZ2"; then
        AC_SEARCH_LIBS(BZ2_bzCompressInit,bz2,[HAVE_BZ2=1;LIBRARIES="$LIBRARIES bz2";AC_DEFINE(HAVE_BZ2,1,[bzip2 installed])])
      fi
    fi
  fi
fi

if test $ENABLE_LZMA = "yes"; then
  if test -d xz -o -d "`readlink xz`"; then
    if test "$ENABLE_PACKAGE_COMPILE" = "yes"; then
      dnl compile lzma library

      mkdir packages 2>/dev/null
      mkdir packages/include 2>/dev/null
      mkdir packages/lib 2>/dev/null
      cwd=`pwd`

      AC_MSG_COMPILE([xz utils])
      result=1
      if test $result -eq 1; then
        (cd xz; ./configure --prefix=$cwd/packages) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (configure)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        (cd xz; make clean; make) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (make)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        (cd xz; make install) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (install)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        AC_MSG_RESULT([done])
      fi
    else
      result=1
    fi

    if test $result -eq 1; then
      HAVE_LZMA=1
      CC_INCLUDES="$CC_INCLUDES $cwd/packages/include"
      LIBRARY_PATHS="$LIBRARY_PATHS $cwd/packages/lib"
      STATIC_LIBRARIES="$STATIC_LIBRARIES lzma"
      AC_DEFINE(HAVE_LZMA,1,[lzma installed (local)])
    fi
  else
    dnl search for installed lzma library
    if test $ENABLE_LINK_DYNAMIC = "yes"; then
      AC_SEARCH_LIBS(lzma_easy_encoder,lzma,[HAVE_LZMA=1;LIBRARIES="$LIBRARIES lzma";AC_DEFINE(HAVE_LZMA,1,[lzma installed])])
    else
      if test -z "$HAVE_LZMA"; then
        AC_SEARCH_STATIC_LIBS(lzma_easy_encoder,lzma,[HAVE_LZMA=1;STATIC_LIBRARIES="$STATIC_LIBRARIES lzma";AC_DEFINE(HAVE_LZMA,1,[static lzma installed])])
      fi
      if test -z "$HAVE_LZMA"; then
        AC_SEARCH_LIBS(lzma_easy_encoder,lzma,[HAVE_LZMA=1;LIBRARIES="$LIBRARIES lzma";AC_DEFINE(HAVE_LZMA,1,[lzma installed])])
      fi
    fi
  fi
fi

if test $ENABLE_XDELTA3 = "yes"; then
  if test -d xdelta3 -o -d "`readlink xdelta3`"; then
    HAVE_XDELTA=1
    HAVE_XDELTA3=1
    CC_INCLUDES="$CC_INCLUDES $cwd/xdelta3"
    AC_DEFINE(HAVE_XDELTA,1,[xdelta installed])
    AC_DEFINE(HAVE_XDELTA3,1,[xdelta3 installed])
  fi
fi

if test $ENABLE_GCRYPT = "yes"; then
  if test \( -d libgpg-error -o -d "`readlink libgpg-error`" \) -a \( -d libgcrypt -o -d "`readlink libgcrypt`" \); then
    if test "$ENABLE_PACKAGE_COMPILE" = "yes"; then
      dnl compile libgcrypt library

      mkdir packages 2>/dev/null
      mkdir packages/include 2>/dev/null
      mkdir packages/lib 2>/dev/null
      cwd=`pwd`

      AC_MSG_COMPILE([libgpg-error])
      result1=1
      if test $result1 -eq 1; then
        (cd libgpg-error; ./configure --prefix=$cwd/packages) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (configure)])
          result1=0
        fi
      fi
      if test $result1 -eq 1; then
        (cd libgpg-error; make clean; make) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (configure)])
          result1=0
        fi
      fi
      if test $result1 -eq 1; then
        (cd libgpg-error; make install) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (install)])
          result1=0
        fi
      fi
      if test $result1 -eq 1; then
        AC_MSG_RESULT([done])
      fi

      AC_MSG_COMPILE([libgcrypt])
      result2=1
      if test $result2 -eq 1; then
        (cd libgcrypt; ./configure --prefix=$cwd/packages --with-gpg-error-prefix=$cwd/packages `if test "$ENABLE_DEBUG" = "yes"; then echo --disable-optimization; fi`) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (configure)])
          result2=0
        fi
      fi
      if test $result2 -eq 1; then
        (cd libgcrypt; make clean; make) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (make)])
          result2=0
        fi
      fi
      if test $result2 -eq 1; then
        (cd libgcrypt; make install) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (install)])
          result2=0
        fi
      fi
      if test $result2 -eq 1; then
        AC_MSG_RESULT([done])
      fi
    else
      result1=1
      result2=1
    fi

    if test $result1 -eq 1 -a $result2 -eq 1; then
      HAVE_GCRYPT=1
      HAVE_GPG_ERROR=1
      CC_INCLUDES="$CC_INCLUDES $cwd/packages/include"
      LIBRARY_PATHS="$LIBRARY_PATHS $cwd/packages/lib"
      STATIC_LIBRARIES="$STATIC_LIBRARIES gpg-error gcrypt"
      AC_DEFINE(HAVE_GCRYPT,1,[gcrypt installed (local)])
    fi
  else
    dnl check if suitable gcrypt is installed
    AC_CHECK_TYPE(gcry_cipher_hd_t,
      [
        dnl search for installed gpg-error/gcrypt library
        LIBRARIES="$LIBRARIES dl"
        if test $ENABLE_LINK_DYNAMIC = "yes"; then
          AC_SEARCH_LIBS(gpg_strerror,gpg-error,[HAVE_GPG_ERROR=1;LIBRARIES="$LIBRARIES gpg-error";AC_DEFINE(HAVE_GPG_ERROR,1,[GPG error installed])])
        else
          if test -z "$HAVE_GPG_ERROR"; then
            AC_SEARCH_STATIC_LIBS(gpg_strerror,gpg-error,[HAVE_GPG_ERROR=1;STATIC_LIBRARIES="$STATIC_LIBRARIES gpg-error";AC_DEFINE(HAVE_GPG_ERROR,1,[static GPG error installed])])
          fi
          if test -z "$HAVE_GPG_ERROR"; then
            AC_SEARCH_LIBS(gpg_strerror,gpg-error,[HAVE_GPG_ERROR=1;LIBRARIES="$LIBRARIES gpg-error";AC_DEFINE(HAVE_GPG_ERROR,1,[GPG error installed])])
          fi
        fi
        if test $ENABLE_LINK_DYNAMIC = "yes"; then
          AC_SEARCH_LIBS(gcry_check_version,gcrypt,[HAVE_GCRYPT=1;LIBRARIES="$LIBRARIES gcrypt";AC_DEFINE(HAVE_GCRYPT,1,[gcrypt installed])])
        else
          if test -z "$HAVE_GCRYPT"; then
            AC_SEARCH_STATIC_LIBS(gcry_check_version,gcrypt,[HAVE_GCRYPT=1;STATIC_LIBRARIES="$STATIC_LIBRARIES gcrypt";AC_DEFINE(HAVE_GCRYPT,1,[static gcrypt installed])])
          fi
          if test -z "$HAVE_GCRYPT"; then
            AC_SEARCH_LIBS(gcry_check_version,gcrypt,[HAVE_GCRYPT=1;LIBRARIES="$LIBRARIES gcrypt";AC_DEFINE(HAVE_GCRYPT,1,[gcrypt installed])])
          fi
        fi
      ],
      [
        AC_MSG_WARN([no or wrong version of gcrypt. gcrypt version >=1.2.4 needed. Disabled gcrypt support.]);
        ENABLE_GCRYPT=no
      ],
      [#include <gcrypt.h>]
    )
  fi
fi

if test $ENABLE_FTP = "yes"; then
  if test -d ftplib -o -d "`readlink ftplib`"; then
    if test "$ENABLE_PACKAGE_COMPILE" = "yes"; then
      dnl compile ftp library

      mkdir packages 2>/dev/null
      mkdir packages/include 2>/dev/null
      mkdir packages/lib 2>/dev/null
      cwd=`pwd`

      AC_MSG_COMPILE([ftplib])
      result=1
      if test $result -eq 1; then
        (cd packages/ftplib-3.1; patch --batch -N -p1 <$cwd/misc/ftplib-3.1-without-perror.patch) 1>/dev/null 2>/dev/null
        (cd packages/ftplib-3.1; patch --batch -N -p1 <$cwd/misc/ftplib-3.1-ftpaccess.patch) 1>/dev/null 2>/dev/null
        (cd packages/ftplib-3.1; patch --batch -N -p1 <$cwd/misc/ftplib-3.1-receive-timeout.patch) 1>/dev/null 2>/dev/null
        (cd packages/ftplib-3.1; patch --batch -N -p1 <$cwd/misc/ftplib-3.1-ftpdir-file-close.patch) 1>/dev/null 2>/dev/null
      fi
      if test $result -eq 1; then
        (cd ftplib/linux; make clean; make) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (make)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        (cd ftplib/linux; cp ftplib.h $cwd/packages/include && cp libftp.a $cwd/packages/lib) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (install)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        AC_MSG_RESULT([done])
      fi
    else
      result=1
    fi

    if test $result -eq 1; then
      HAVE_FTP=1
      CC_INCLUDES="$CC_INCLUDES $cwd/packages/include"
      LIBRARY_PATHS="$LIBRARY_PATHS $cwd/packages/lib"
      STATIC_LIBRARIES="$STATIC_LIBRARIES ftp"
      AC_DEFINE(HAVE_FTP,1,[ftplib installed (local)])
    fi
  else
    if test $ENABLE_LINK_DYNAMIC = "yes"; then
      AC_SEARCH_LIBS(FtpInit,ftp,[HAVE_FTP=1;LIBRARIES="$LIBRARIES ftp";AC_DEFINE(HAVE_FTP,1,[FTP installed])])
    else
      if test -z "$HAVE_FTP"; then
        AC_SEARCH_STATIC_LIBS(FtpInit,ftp,[HAVE_FTP=1;STATIC_LIBRARIES="$STATIC_LIBRARIES ftp";AC_DEFINE(HAVE_FTP,1,[static FTP installed])])
      fi
      if test -z "$HAVE_FTP"; then
        AC_SEARCH_LIBS(FtpInit,ftp,[HAVE_FTP=1;LIBRARIES="$LIBRARIES ftp";AC_DEFINE(HAVE_FTP,1,[FTP installed])])
      fi
    fi
  fi
fi

if test $ENABLE_SSH = "yes"; then
  if test -d libssh2 -o -d "`readlink libssh2`"; then
    if test "$ENABLE_PACKAGE_COMPILE" = "yes"; then
      dnl compile ssh2 library

      mkdir packages 2>/dev/null
      mkdir packages/include 2>/dev/null
      mkdir packages/lib 2>/dev/null
      cwd=`pwd`

      AC_MSG_COMPILE([libssh2])
      result=1
      if test $result -eq 1; then
        (cd packages; patch --batch -N -p0 <$cwd/misc/libssh2-1.1-keepalive.patch) 1>/dev/null 2>/dev/null
      fi
      if test $result -eq 1; then
        (cd libssh2; ./configure --prefix=$cwd/packages --enable-debug) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (configure)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        (cd libssh2; make clean; make) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (make)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        (cd libssh2; make install) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (install)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        AC_MSG_RESULT([done])
      fi
    else
      result=1
    fi

    if test $result -eq 1; then
      HAVE_SSH2=1
      CC_INCLUDES="$CC_INCLUDES $cwd/packages/include"
      LIBRARY_PATHS="$LIBRARY_PATHS $cwd/packages/lib"
      STATIC_LIBRARIES="$STATIC_LIBRARIES ssh2"
      AC_DEFINE(HAVE_SSH2,1,[ssh2 installed (local)])
    fi
  else
    if test $ENABLE_LINK_DYNAMIC = "yes"; then
      AC_SEARCH_LIBS(libssh2_session_init_ex,ssh2,[HAVE_SSH2=1;LIBRARIES="$LIBRARIES ssh2";AC_DEFINE(HAVE_SSH2,1,[SSH2 installed])])
    else
      if test -z "$HAVE_SSH2"; then
        AC_SEARCH_STATIC_LIBS(libssh2_session_init_ex,ssh2,[HAVE_SSH2=1;STATIC_LIBRARIES="$STATIC_LIBRARIES ssh2";AC_DEFINE(HAVE_SSH2,1,[static SSH2 installed])])
      fi
      if test -z "$HAVE_SSH2"; then
        AC_SEARCH_LIBS(libssh2_session_init_ex,ssh2,[HAVE_SSH2=1;LIBRARIES="$LIBRARIES ssh2";AC_DEFINE(HAVE_SSH2,1,[SSH2 installed])])
      fi
    fi
  fi

  dnl link libcrypto, too, if available (may be needed by some libssh2 implemenations)
  if test $ENABLE_LINK_DYNAMIC = "yes"; then
    AC_SEARCH_LIBS(MD5_Init,crypto,[HAVE_CRYPTO=1;LIBRARIES="$LIBRARIES crypto";AC_DEFINE(HAVE_CRYPTO,1,[crypto installed])])
  else
    if test -z "$HAVE_CRYPTO"; then
      AC_SEARCH_STATIC_LIBS(MD5_Init,crypto,[HAVE_CRYPTO=1;STATIC_LIBRARIES="$STATIC_LIBRARIES crypto";AC_DEFINE(HAVE_CRYPTO,1,[static crypto installed])])
    fi
    if test -z "$HAVE_CRYPTO"; then
      AC_SEARCH_LIBS(MD5_Init,crypto,[HAVE_CRYPTO=1;LIBRARIES="$LIBRARIES crypto";AC_DEFINE(HAVE_CRYPTO,1,[crypto installed])])
    fi
  fi
fi

if test $ENABLE_TLS = "yes"; then
  if test -d gnutls -o -d "`readlink gnutls`"; then
    if test "$ENABLE_PACKAGE_COMPILE" = "yes"; then
      dnl compile gnutls library

      mkdir packages 2>/dev/null
      mkdir packages/include 2>/dev/null
      mkdir packages/lib 2>/dev/null
      cwd=`pwd`

      AC_MSG_COMPILE([gnutls])
      result=1
      if test $result -eq 1; then
        (cd gnutls; ./configure --prefix=$cwd/packages --with-included-libtasn1) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (configure)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        (cd gnutls; make clean; make) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (make)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        (cd gnutls; make install) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (install)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        AC_MSG_RESULT([done])
      fi
    else
      result=1
    fi

    if test $result -eq 1; then
      HAVE_GNU_TLS=1
      CC_INCLUDES="$CC_INCLUDES $cwd/packages/include"
      LIBRARY_PATHS="$LIBRARY_PATHS $cwd/packages/lib"
      STATIC_LIBRARIES="$STATIC_LIBRARIES gnutls"
      AC_DEFINE(HAVE_GNU_TLS,1,[gnutls installed (local)])
    fi
  else
    AC_CHECK_TYPE(gnutls_session_t,,AC_MSG_WARN([no or wrong version of gnutls. gnutls version >=2.0.1 needed. Disabled TLS support.]); ENABLE_TLS=no,[#include <gnutls/gnutls.h>])
    if test $ENABLE_LINK_DYNAMIC = "yes"; then
      AC_SEARCH_LIBS(gnutls_global_init,gnutls,[HAVE_GNU_TLS=1;LIBRARIES="$LIBRARIES gnutls";AC_DEFINE(HAVE_GNU_TLS,1,[GNU TLS installed])])
      AC_SEARCH_LIBS(asn1_length_der,tasn1,[HAVE_TASN1=1;LIBRARIES="$LIBRARIES tasn1";AC_DEFINE(HAVE_TASN1,1,[TASN.1 installed])])
    else
      if test -z "$HAVE_GNU_TLS"; then
        AC_SEARCH_STATIC_LIBS(gnutls_global_init,gnutls,[HAVE_GNU_TLS=1;STATIC_LIBRARIES="$STATIC_LIBRARIES gnutls";AC_DEFINE(HAVE_GNU_TLS,1,[static GNU TLS installed])])
      fi
      if test -z "$HAVE_GNU_TLS"; then
        AC_SEARCH_LIBS(gnutls_global_init,gnutls,[HAVE_GNU_TLS=1;LIBRARIES="$LIBRARIES gnutls";AC_DEFINE(HAVE_GNU_TLS,1,[GNU TLS installed])])
      fi

      if test -z "$HAVE_TASN1"; then
        AC_SEARCH_STATIC_LIBS(asn1_length_der,tasn1,[HAVE_TASN1=1;STATIC_LIBRARIES="$STATIC_LIBRARIES tasn1";AC_DEFINE(HAVE_TASN1,1,[static TASN.1 installed])])
      fi
      if test -z "$HAVE_TASN1"; then
        AC_SEARCH_LIBS(asn1_length_der,tasn1,[HAVE_TASN1=1;LIBRARIES="$LIBRARIES tasn1";AC_DEFINE(HAVE_TASN1,1,[TASN.1 installed])])
      fi
    fi
  fi
fi

if test $ENABLE_ISO9660 = "yes"; then
  if test -d libcdio -o -d "`readlink libcdio`"; then
    if test "$ENABLE_PACKAGE_COMPILE" = "yes"; then
      dnl compile libcdio library

      mkdir packages 2>/dev/null
      mkdir packages/include 2>/dev/null
      mkdir packages/lib 2>/dev/null
      cwd=`pwd`

      AC_MSG_COMPILE([libcdio])
      result=1
      if test $result -eq 1; then
        if test "$ENABLE_DEBUG" = "yes"; then
          (cd libcdio; CFLAGS="-g -O0" CXXFLAGS="-g -O0" ./configure --prefix=$cwd/packages --disable-cxx --enable-static=iso9660 --disable-shared) 1>/dev/null 2>/dev/null
        else
          (cd libcdio; ./configure --prefix=$cwd/packages --disable-cxx --enable-static=iso9660 --disable-shared) 1>/dev/null 2>/dev/null
        fi
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (configure)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        (cd libcdio; make clean; make) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (make)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        (cd libcdio; make install PREFIX=$cwd/packages) 1>/dev/null 2>/dev/null
        if test $? -ne 0; then 
          AC_MSG_RESULT([fail (install)])
          result=0
        fi
      fi
      if test $result -eq 1; then
        AC_MSG_RESULT([done])
      fi
    else
      result=1
    fi

    if test $result -eq 1; then
      HAVE_ISO9660=1
      CC_INCLUDES="$CC_INCLUDES $cwd/packages/include"
      LIBRARY_PATHS="$LIBRARY_PATHS $cwd/packages/lib"
      STATIC_LIBRARIES="$STATIC_LIBRARIES iso9660 cdio"
      AC_DEFINE(HAVE_ISO9660,1,[iso9660 installed (local)])
    fi
  else
    dnl search for installed iso9660 library
    if test $ENABLE_LINK_DYNAMIC = "yes"; then
      AC_SEARCH_LIBS(iso9660_open,iso9660,[HAVE_ISO9660=1;LIBRARIES="$LIBRARIES iso9660 cdio";AC_DEFINE(HAVE_ISO9660,1,[iso9660 installed])])
    else
      if test -z "$HAVE_ISO9660"; then
        AC_SEARCH_STATIC_LIBS(iso9660_open,iso9660,[HAVE_ISO9660=1;STATIC_LIBRARIES="$STATIC_LIBRARIES iso9660 cdio";AC_DEFINE(HAVE_ISO9660,1,[static iso9660 installed])])
      fi
      if test -z "$HAVE_ISO9660"; then
        AC_SEARCH_LIBS(iso9660_open,iso9660,[HAVE_ISO9660=1;LIBRARIES="$LIBRARIES iso9660 cdio";AC_DEFINE(HAVE_ISO9660,1,[iso9660 installed])])
      fi
    fi
  fi
fi

# set variables for tests
CFLAGS="$CC_FLAGS"
for z in $CC_DEFINES ""; do
  if test -n "$z"; then
    CFLAGS="$CFLAGS -D$z"
  fi
done
for z in $CC_INCLUDES ""; do
  if test -n "$z"; then
    CFLAGS="$CFLAGS -I$z"
  fi
done
LDFLAGS="$LD_FLAGS -v"
for z in $LIBRARY_PATHS ""; do
  if test -n "$z"; then
    LDFLAGS="$LDFLAGS -L$z"
  fi
done
for z in $LIBRARIES $STATIC_LIBRARIES ""; do
  if test -n "$z"; then
    LIBS="$LIBS -l$z"
  fi
done

AC_CHECK_PTHREAD_DEFINES
AC_CHECK_FUNC(pthread_attr_setname,AC_DEFINE(HAVE_PTHREAD_ATTR_SETNAME,1,[pthread_attr_setname() available]))

AC_CHECK_FUNC(gethostbyname,  AC_DEFINE(HAVE_GETHOSTBYNAME,  1,[gethostbyname() available]))
AC_CHECK_FUNC(gethostbyaddr,  AC_DEFINE(HAVE_GETHOSTBYADDR,  1,[gethostbyname() available]))
AC_CHECK_FUNC(gethostbyname_r,AC_DEFINE(HAVE_GETHOSTBYNAME_R,1,[gethostbyname_r() available]))
AC_CHECK_FUNC(gethostbyaddr_r,AC_DEFINE(HAVE_GETHOSTBYADDR_R,1,[gethostbyname_r() available]))

AC_CHECK_FUNC(fseeko64,,AC_ERROR([function fseeko64() is not available]))
AC_CHECK_FUNC(ftello64,,AC_ERROR([function ftello64() is not available]))
AC_CHECK_FUNC(fdatasync,AC_DEFINE(HAVE_FDATASYNC,1,[fdatasync() available]))
AC_CHECK_FUNC(posix_fadvise,AC_DEFINE(HAVE_POSIX_FADVISE,1,[posix_fadvise() available]))

AC_CHECK_FUNC(zlibVersion,,AC_ERROR([function zlibVersion() is not available]))

AC_CHECK_FUNC(libssh2_channel_send_keepalive,AC_DEFINE(HAVE_SSH2_CHANNEL_SEND_KEEPALIVE,1,[SSH2 has libssh2_channel_send_keepalive()]))
AC_CHECK_FUNC(libssh2_keepalive_config,      AC_DEFINE(HAVE_SSH2_KEEPALIVE_CONFIG,      1,[SSH2 has libssh2_keepalive_config()]))
AC_CHECK_FUNC(libssh2_keepalive_send,        AC_DEFINE(HAVE_SSH2_KEEPALIVE_SEND,        1,[SSH2 has libssh2_keepalive_send()]))
AC_CHECK_FUNC(libssh2_scp_send64,            AC_DEFINE(HAVE_SSH2_SCP_SEND64,            1,[SSH2 has libssh2_scp_send64() function]))
AC_CHECK_FUNC(libssh2_sftp_seek2,            AC_DEFINE(HAVE_SSH2_SFTP_SEEK2,            1,[SSH2 has libssh2_sftp_seek2() function]))

AC_CHECK_FUNC(iso9660_open,              AC_DEFINE(HAVE_ISO9660_OPEN,              1,[iso9660_open() available]))
AC_CHECK_FUNC(iso9660_close,             AC_DEFINE(HAVE_ISO9660_CLOSE,             1,[iso9660_close() available]))
AC_CHECK_FUNC(iso9660_ifs_stat_translate,AC_DEFINE(HAVE_ISO9660_IFS_STAT_TRANSLATE,1,[iso9660_ifs_stat_translate() available]))
AC_CHECK_FUNC(iso9660_iso_seek_read,     AC_DEFINE(HAVE_ISO9660_ISO_SEEK_READ,     1,[iso9660_iso_seek_read() available]))

AC_CHECK_FUNC(backtrace,AC_DEFINE(HAVE_BACKTRACE,1,[backtrace() available]) CC_DEFINES+=HAVE_BACKTRACE)

dnl -------------------------------- misc ------------------------------

VERSION_MAJOR=`cat version|grep MAJOR|sed 's/.*=//g'`
VERSION_MINOR=`cat version|grep MINOR|sed 's/.*=//g'`

COPYRIGHT_DATE="2007-2011"

AC_DEFINE_UNQUOTED(FILE_SEPARATOR_CHAR,'$FILE_SEPARATOR_CHAR',[file separator char])

AC_DEFINE_UNQUOTED(CONFIG_DIR,"$CONFIG_DIR",[configuration directory])
AC_DEFINE_UNQUOTED(TLS_DIR,   "$TLS_DIR",   [TLS directory])

dnl ------------ autoheader: top/bottom include for config.h -----------

AC_CONFIG_HEADERS(bar/config.h)

dnl no AC_DEFINE should occur after this line!

AH_TOP([
#ifndef __CONFIG__
#define __CONFIG__
])

AH_TOP([

#ifndef offsetof
  #define offsetof(type,member) ((size_t)&((type*)0)->member)
#endif /* offsetof */

])

AH_BOTTOM([#endif /* __CONFIG__ */])

dnl --------------------------------------------------------------------

if test "$prefix" = "NONE"; then
  prefix=/usr/local
fi
INSTALL_DIR=$prefix
if test "$bindir" = "\${exec_prefix}/bin"; then
  if test "$exec_prefix" = NONE; then
    INSTALL_BIN_DIR=$prefix/bin
  else
    INSTALL_BIN_DIR=$exec_prefix
  fi
else
  INSTALL_BIN_DIR=$bindir
fi
if test "$mandir" = "\${prefix}/man"; then
  MAN_DIR=${prefix}/man
else
  MAN_DIR=${mandir}
fi

dnl patch PACKAGE entries in config.h
AC_CONFIG_COMMANDS(SET_PACKAGE_IN_CONFIG_H,
                   [sed -i 's/#define PACKAGE_/#define BAR_PACKAGE_/g' bar/config.h]
                  )
dnl make files
AC_CONFIG_FILES(Makefile)
AC_CONFIG_FILES(bar/Makefile)
AC_CONFIG_FILES(barcontrol/Makefile)

dnl config files
AC_CONFIG_FILES(barcontrol/src/Config.java)

dnl epm file
AC_CONFIG_FILES(epm.list)

AC_CONFIG_COMMANDS(BUILD_NOTE,
                   [echo "";
                    echo "Configuration:";
                    echo "  debug version     : `if test "$ENABLE_DEBUG" = "yes"; then echo yes; else echo no; fi`";
                    echo "  dynamic linked    : `if test "$ENABLE_LINK_DYNAMIC" = "yes"; then echo yes; else echo no; fi`";
                    echo "  bzip2 compression : `if test "$HAVE_BZ2"; then echo yes; else echo no; fi`";
                    echo "  lzma compression  : `if test "$HAVE_LZMA"; then echo yes; else echo no; fi`";
                    echo "  xdelta compression: `if test "$HAVE_XDELTA"; then echo yes; else echo no; fi`";
                    echo "  crypto support    : `if test "$HAVE_GCRYPT"; then echo yes; else echo no; fi`";
                    echo "  FTP support       : `if test "$HAVE_FTP"; then echo yes; else echo no; fi`";
                    echo "  SCP/SFTP support  : `if test "$HAVE_SSH2"; then echo yes; else echo no; fi`";
                    echo "  TLS/SSL server    : `if test "$HAVE_GNU_TLS"; then echo yes; else echo no; fi`";
                    echo "  ISO 9660 support  : `if test "$HAVE_ISO9660"; then echo yes; else echo no; fi`";
                    echo "  GUI support       : `if test "$ENABLE_GUI" = "yes"; then echo yes; else echo no; fi`";
                    echo "  SWT directory     : $SWT_DIR"
                    echo ""
                    echo "  Packages support  : `if test -n "$EPM"; then echo yes; else echo no; fi`"
                    echo ""
                    echo "  Install directory : $INSTALL_DIR"
                    echo "  Binary directory  : $INSTALL_BIN_DIR"
                    echo "  Config directory  : $CONFIG_DIR"
                    echo "  TLS directory     : $TLS_DIR"
                    echo ""
                    if test ! "$HAVE_BZ2" -o ! "$HAVE_LZMA" -o ! "$HAVE_XDELTA" -o ! "$HAVE_GCRYPT" -o ! "$HAVE_FTP" -o ! "$HAVE_SSH2" -o ! "$HAVE_GNU_TLS"; then
                      echo "Note: you can download missing additional packages with the script"
                      echo "      './download-third-party-packages.sh'. Please rerun configure"
                      echo "      after downloading."
                    fi
                   ],
                   ENABLE_DEBUG=$ENABLE_DEBUG
                   ENABLE_LINK_DYNAMIC=$ENABLE_LINK_DYNAMIC
                   HAVE_BZ2=$HAVE_BZ2
                   HAVE_LZMA=$HAVE_LZMA
                   HAVE_XDELTA=$HAVE_XDELTA
                   HAVE_GCRYPT=$HAVE_GCRYPT
                   HAVE_FTP=$HAVE_FTP
                   HAVE_SSH2=$HAVE_SSH2
                   HAVE_GNU_TLS=$HAVE_GNU_TLS
                   HAVE_ISO9660=$HAVE_ISO9660
                   ENABLE_GUI=$ENABLE_GUI
                   SWT_DIR="$SWT_DIR"
                   INSTALL_DIR="$INSTALL_DIR"
                   INSTALL_BIN_DIR="$INSTALL_BIN_DIR"
                   CONFIG_DIR="$CONFIG_DIR"
                   TLS_DIR="$TLS_DIR"
                   EPM="$EPM"
                  )

AC_OUTPUT

dnl --- end of file ---




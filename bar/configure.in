dnl --------------------------------------------------------------------
dnl
dnl $Source: /home/torsten/cvs/bar/configure.in,v $
dnl $Revision: 1.18 $
dnl $Author: torsten $
dnl Contents: BAR auto-configure script
dnl
dnl --------------------------------------------------------------------

dnl ----------------------- additional macros --------------------------

dnl --- check if C compiler long long data type available
# (original macro from http://ac-archive.sourceforge.net/C_Support/ac_c_long_long.html)
AC_DEFUN([AC_C_LONG_LONG],
[
  AC_CACHE_CHECK(
    [for long long int],
    ac_cv_c_long_long,
    [
      if test "$GCC" = yes; then
        ac_cv_c_long_long=yes
      else
        AC_TRY_COMPILE(,[long long int i;],
        ac_cv_c_long_long=yes,
        ac_cv_c_long_long=no)
      fi
    ]
  )
  AS_IF([test $ac_cv_c_long_long = yes],[$1],[$2])dnl
  AC_PROVIDE([$0])dnl
])

AC_DEFUN([AC_CHECK_LARGEFILE_DEFINES],
[
  AC_CACHE_CHECK(
    [for needed large files defines],
    ac_largefile_defines,
    [
      cat << \EOF > conftest.c
#include <stdlib.h>
#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
int main(void) { printf("%p",fseeko64); return 0; }
EOF
      ${CC} ${CFLAGS} -Wall -Werror -c conftest.c -o conftest.o 1>/dev/null 2>/dev/null; rc=$?
      if test $rc -eq 0; then
        ac_largefile_defines=""
      else
        ${CC} ${CFLAGS} -Wall -Werror -Dz_LARGEFILE64_SOURCE -c conftest.c -o conftest.o 1>/dev/null 2>/dev/null; rc=$?
        if test $rc -eq 0; then
          ac_largefile_defines="_LARGEFILE64_SOURCE"
        else
          ac_largefile_defines=""
        fi
      fi
      rm -f conftest.c conftest.o
      CC_DEFINES="$CC_DEFINES $ac_largefile_defines"
    ]
  )dnl
  AC_PROVIDE([$0])dnl
])

AC_DEFUN([AC_CHECK_PTHREAD_DEFINES],
[
  AC_CACHE_CHECK(
    [for needed pthread defines],
    ac_extended_pthread_defines,
    [
      cat << \EOF > conftest.c
#include <stdlib.h>
#include <stdio.h>
#include <pthread.h>
int main(void) { printf("%p",pthread_mutexattr_settype); return 0; }
EOF
      ${CC} ${CFLAGS} -Wall -Werror -c conftest.c -o conftest.o 1>/dev/null 2>/dev/null; rc=$?
      if test $rc -eq 0; then
        ac_extended_pthread_defines=""
      else
        ${CC} ${CFLAGS} -Wall -Werror -D_GNU_SOURCE -c conftest.c -o conftest.o 1>/dev/null 2>/dev/null; rc=$?
        if test $rc -eq 0; then
          ac_extended_pthread_defines="_GNU_SOURCE"
        else
          ac_extended_pthread_defines=""
        fi
      fi
      rm -f conftest.c conftest.o
      CC_DEFINES="$CC_DEFINES $ac_extended_pthread_defines"
    ]
  )dnl
  AC_PROVIDE([$0])dnl
])

dnl ------------------------- basic settings ---------------------------

dnl --- initialize autoconf
AC_INIT(.)
AC_PREREQ(2.53)

dnl --- set source-directory (specify existing source file)
AC_CONFIG_SRCDIR(bar/bar.c)

dnl --- install-sh, config.sub and config.guess are in this directory.
AC_CONFIG_AUX_DIR(bin)

dnl --- check bost system
AC_CANONICAL_HOST

dnl AC_PRESERVE_HELP_ORDER

dnl ----------------------- substitute settings ------------------------

AC_SUBST(PLATFORM)                          dnl platform

AC_SUBST(ENABLE_DEBUG)                      dnl "yes" for debug version, "no" otherwise
AC_SUBST(ENABLE_GUI)                        dnl "yes" to build GUI, "no" otherwise

AC_SUBST(INSTALL_DIR)                       dnl installation directory
AC_SUBST(INSTALL_BIN_DIR)                   dnl installation directory for binaries
AC_SUBST(CONFIG_DIR)                        dnl configuration directory
AC_SUBST(TLS_DIR)                           dnl TLS/SSL directory

AC_SUBST(CC)                                dnl C compiler
AC_SUBST(LD)                                dnl linker
AC_SUBST(STRIP)                             dnl strip

AC_SUBST(CC_FLAGS)                          dnl C compiler flags
AC_SUBST(CC_WARN_FLAGS)                     dnl C compiler warning flags
AC_SUBST(CC_OPTIMIZE)                       dnl C compiler optimization flags
AC_SUBST(CC_DEFINES)                        dnl C compiler defines
AC_SUBST(CC_INCLUDES)                       dnl C compiler include paths

AC_SUBST(LD_FLAGS)                          dnl linker flags

AC_SUBST(LIBRARY_PATHS)                     dnl library paths
AC_SUBST(LIBRARIES)                         dnl libraries to link
AC_SUBST(STATIC_LIBRARIES)                  dnl libraries to link static

AC_SUBST(JAVA)                              dnl java command
AC_SUBST(JAVAC)                             dnl java compiler
AC_SUBST(JAR)                               dnl jar command

AC_SUBST(JAVA_FLAGS)                        dnl java flags
AC_SUBST(JAVAC_FLAGS)                       dnl java compiler flags

AC_SUBST(SWT_DIR)                           dnl SWT directory
AC_SUBST(LAUNCH4J_DIR)                      dnl launch4j directory

AC_SUBST(CERTOOL)                           dnl GNU TLS certtool
AC_SUBST(KEYTOOL)                           dnl Java keytool

dnl ----------------------- initialize variables -----------------------

CC_FLAGS=""
CC_DEFINES=""
CC_OPTIMIZE=""
CC_INCLUDES=""

LD_FLAGS=""
LIBRARY_PATHS=""
LIBRARIES=""
STATIC_LIBRARIES=""

ENABLE_DEBUG="no"
ENABLE_LINK_DYNAMIC="no"
ENABLE_BZIP2="yes"
ENABLE_GCRYPT="yes"
ENABLE_FTP="yes"
ENABLE_SSH="yes"
ENABLE_TLS="yes"
ENABLE_GUI="yes"

dnl ---------------------------- check system --------------------------

case "$host_os" in
  linux-*)
    PLATFORM=Linux
    ;;
  mingw*)
    PLATFORM=Windows
    ;;
  sunos | solaris*)
    PLATFORM=Solaris
    ;;
  windows*)
    PLATFORM=Windows
    ;;
  *)
    AC_MSG_ERROR([unknown host operation system '$host_os'. Please specify host as (cpu-vendor-os or cpu-os). Supported host operating systems: $host_supported_os])
    ;;
esac

dnl ---------------------------- directories ---------------------------

dnl --------------------- --with/--without options ---------------------

AC_ARG_WITH(
  config-dir,
  AC_HELP_STRING([--with-config-dir=<path>],[configuration directory (default: /etc/bar)]),
  [CONFIG_DIR=$withval],
  [CONFIG_DIR=/etc/bar]
)
AC_ARG_WITH(
  tls-dir,
  AC_HELP_STRING([--with-tls-dir=<path>],[TLS/SLL configuration and certificate directory (default: /etc/ssl)]),
  [TLS_DIR=$withval],
  [TLS_DIR=/etc/ssl]
)
AC_ARG_WITH(
  swt-dir,
  AC_HELP_STRING([--with-swt-dir=<path>],[SWT directory]),
  [SWT_DIR=$withval]
)
AC_ARG_WITH(
  launch4j-dir,
  AC_HELP_STRING([--with-launch4j-dir=<path>],[launch4j directory]),
  [LAUNCH4J_DIR=$withval]
)

dnl ------------------- --enable/--disable options ---------------------

AC_ARG_ENABLE(
  debug,
  AC_HELP_STRING([--enable-debug],[enable debug version]),
  [ENABLE_DEBUG=$enableval]
)
AC_ARG_ENABLE(
  link-static,
  AC_HELP_STRING([--disable-link-static],[disable static linkage (same as --enable-link-dynamic)]),
  [if test "$enableval" = "no"; then ENABLE_LINK_DYNAMIC=yes; fi]
)
AC_ARG_ENABLE(
  link-dynamic,
  AC_HELP_STRING([--enable-link-dynamic],[enable dynamic linkage (same as --disable-link-static)]),
  [ENABLE_LINK_DYNAMIC=$enableval]
)
AC_ARG_ENABLE(
  bzip2,
  AC_HELP_STRING([--disable-bzip2],[disable bzip2 support]),
  [ENABLE_BZIP2=$enableval]
)
AC_ARG_ENABLE(
  gcrypt,
  AC_HELP_STRING([--disable-gcrypt],[disable gcrypt support]),
  [ENABLE_GCRYPT=$enableval]
)
AC_ARG_ENABLE(
  ftp,
  AC_HELP_STRING([--disable-ftp],[disable FTP support]),
  [ENABLE_FTP=$enableval]
)
AC_ARG_ENABLE(
  ssh,
  AC_HELP_STRING([--disable-ssh],[disable SSH support]),
  [ENABLE_SSH=$enableval]
)
AC_ARG_ENABLE(
  tls,
  AC_HELP_STRING([--disable-tls],[disable TLS support]),
  [ENABLE_TLS=$enableval]
)
AC_ARG_ENABLE(
  gui,
  AC_HELP_STRING([--disable-gui],[disable GUI support (barcontrol)]),
  [ENABLE_GUI=$enableval]
)

if test $ENABLE_TLS = "yes" -a ! $ENABLE_GCRYPT = "yes"; then
  AC_MSG_WARN([gcrypt no enabled, disabled TLS support.])
  ENABLE_TLS=no
fi

dnl ------------------------------ programs ----------------------------

AC_PATH_PROGS(CC,gcc cc)
AC_PATH_PROGS(LD,ld gcc)
AC_PATH_PROGS(STRIP,strip)

AC_PATH_PROGS(PERL,perl)
if test -z "$PERL"; then
  AC_MSG_ERROR([Cannot find a 'perl' in PATH. Please check your PATH environment variable.])
fi
AC_PROG_INSTALL
if test -z "$INSTALL"; then
  AC_MSG_ERROR([Cannot find a 'install' in PATH. Please check your PATH environment variable.])
fi

CC_DEFINES="$CC_DEFINES"
if test "$ENABLE_DEBUG" = "yes"; then
  CC_OPTIMIZE="$CC_OPTIMIZE -O0"
else
  CC_OPTIMIZE="$CC_OPTIMIZE -O2"
  CC_DEFINES="$CC_DEFINES NDEBUG"
fi
CC_INCLUDES="$CC_INCLUDES"

LD_FLAGS=""
if test ! $ENABLE_LINK_DYNAMIC = "yes"; then
  LD_FLAGS="-static-libgcc"
fi
LIBRARY_PATHS="$LIBRARY_PATHS /usr/local/lib"

if test "$ENABLE_GUI" = "yes"; then
  AC_PATH_PROGS(JAVA,java)
  if test -z "$JAVA"; then
    AC_MSG_WARN([No 'java' command found in path - cannot execute GUI])
    ENABLE_GUI="no"
  fi
  AC_PATH_PROGS(JAVAC,javac)
  if test -z "$JAVAC"; then
    AC_MSG_WARN([No 'javac' command found in path - cannot compile GUI])
    ENABLE_GUI="no"
  fi
  AC_PATH_PROGS(JAR,jar)
  if test -z "$JAVAC"; then
    AC_MSG_WARN([No 'jar' command found in path - cannot compile GUI])
    ENABLE_GUI="no"
  fi
  AC_PATH_PROGS(LAUNCH4J,launch4j)

  JAVA_FLAGS=""
  if test "$ENABLE_DEBUG" = "yes"; then
    JAVA_FLAGS="-enableassertions"
  fi
  if test "$ENABLE_DEBUG" = "yes"; then
    JAVAC_FLAGS="-g"
  fi
fi

AC_PATH_PROGS(CERTTOOL,certtool)
AC_PATH_PROGS(KEYTOOL,keytool)

dnl -------------- headers/functions/definitions/libraries -------------

# set variables for tests
CFLAGS="$CC_FLAGS"
for z in $CC_DEFINES ""; do
  if test -n "$z"; then
    CFLAGS="$CFLAGS -D$z"
  fi
done
for z in $CC_INCLUDES ""; do
  if test -n "$z"; then
    CFLAGS="$CFLAGS -I$z"
  fi
done
LDFLAGS="$LD_FLAGS"
for z in $LIBRARY_PATHS ""; do
  if test -n "$z"; then
    LDFLAGS="$LDFLAGS -L$z"
  fi
done

AC_C_LONG_LONG(AC_DEFINE(HAVE_LONG_LONG,1,[defined if long long data type available]),AC_MSG_ERROR(long long data type not available))
AC_SYS_LARGEFILE
dnl AC_CHECK_LARGEFILE_DEFINES

AC_SEARCH_LIBS(round,m,,AC_ERROR([m library not found]))
AC_SEARCH_LIBS(pthread_create,pthread,,AC_ERROR([pthread library not found]))
if test $ENABLE_LINK_DYNAMIC = "yes"; then
  AC_SEARCH_LIBS(zlibVersion,z,[HAVE_Z=1;LIBRARIES="$LIBRARIES z";AC_DEFINE(HAVE_Z,1,[z installed])])
else
  AC_SEARCH_LIBS(zlibVersion,z,[HAVE_Z=1;STATIC_LIBRARIES="$STATIC_LIBRARIES z";AC_DEFINE(HAVE_Z,1,[z installed])])
fi
if test $ENABLE_BZIP2 = "yes"; then
  if test $ENABLE_LINK_DYNAMIC = "yes"; then
    AC_SEARCH_LIBS(BZ2_bzCompressInit,bz2,[HAVE_BZ2=1;LIBRARIES="$LIBRARIES bz2";AC_DEFINE(HAVE_BZ2,1,[bzip2 installed])])
  else
    AC_SEARCH_LIBS(BZ2_bzCompressInit,bz2,[HAVE_BZ2=1;STATIC_LIBRARIES="$STATIC_LIBRARIES bz2";AC_DEFINE(HAVE_BZ2,1,[bzip2 installed])])
  fi
fi
if test $ENABLE_GCRYPT = "yes"; then
  AC_CHECK_TYPE(gcry_cipher_hd_t,,AC_MSG_WARN([no or wrong version of gcrypt. gcrypt version >=1.2.4 needed. Disabled gcrypt support.]); ENABLE_GCRYPT=no,[#include <gcrypt.h>])
fi
if test $ENABLE_GCRYPT = "yes"; then
  if test $ENABLE_LINK_DYNAMIC = "yes"; then
    AC_SEARCH_LIBS(gcry_check_version,gcrypt,[HAVE_GCRYPT=1;LIBRARIES="$LIBRARIES gcrypt";AC_DEFINE(HAVE_GCRYPT,1,[gcrypt installed])])
  else
    AC_SEARCH_LIBS(gcry_check_version,gcrypt,[HAVE_GCRYPT=1;STATIC_LIBRARIES="$STATIC_LIBRARIES gcrypt";AC_DEFINE(HAVE_GCRYPT,1,[gcrypt installed])])
  fi
  LIBRARIES="$LIBRARIES dl"
  if test $ENABLE_LINK_DYNAMIC = "yes"; then
    AC_SEARCH_LIBS(gpg_strerror,gpg-error,[HAVE_GPG_ERROR=1;LIBRARIES="$LIBRARIES gpg-error";AC_DEFINE(HAVE_GPG_ERROR,1,[GPG error installed])])
  else
    AC_SEARCH_LIBS(gpg_strerror,gpg-error,[HAVE_GPG_ERROR=1;STATIC_LIBRARIES="$STATIC_LIBRARIES gpg-error";AC_DEFINE(HAVE_GPG_ERROR,1,[GPG error installed])])
  fi
fi
if test $ENABLE_FTP = "yes"; then
  if test $ENABLE_LINK_DYNAMIC = "yes"; then
    AC_SEARCH_LIBS(FtpInit,ftp,[HAVE_FTP=1;LIBRARIES="$LIBRARIES ftp";AC_DEFINE(HAVE_FTP,1,[FTP installed])])
  else
    AC_SEARCH_LIBS(FtpInit,ftp,[HAVE_FTP=1;STATIC_LIBRARIES="$STATIC_LIBRARIES ftp";AC_DEFINE(HAVE_FTP,1,[FTP installed])])
  fi
fi
if test $ENABLE_SSH = "yes"; then
  if test $ENABLE_LINK_DYNAMIC = "yes"; then
    AC_SEARCH_LIBS(libssh2_session_init_ex,ssh2,[HAVE_SSH2=1;LIBRARIES="$LIBRARIES ssh2 crypto";AC_DEFINE(HAVE_SSH2,1,[SSH2 installed])])
  else
    AC_SEARCH_LIBS(libssh2_session_init_ex,ssh2,[HAVE_SSH2=1;STATIC_LIBRARIES="$STATIC_LIBRARIES ssh2 crypto";AC_DEFINE(HAVE_SSH2,1,[SSH2 installed])])
  fi
  AC_CHECK_FUNC(libssh2_channel_send_keepalive,AC_DEFINE(HAVE_SSH2_CHANNEL_SEND_KEEPALIVE,1,[SSH2 libssh2_channel_send_keepalive]))
fi
if test $ENABLE_TLS = "yes"; then
  AC_CHECK_TYPE(gnutls_session_t,,AC_MSG_WARN([no or wrong version of gnutls. gnutls version >=2.0.1 needed. Disabled TLS support.]); ENABLE_TLS=no,[#include <gnutls/gnutls.h>])
fi
if test $ENABLE_TLS = "yes"; then
  if test $ENABLE_LINK_DYNAMIC = "yes"; then
    AC_SEARCH_LIBS(gnutls_global_init,gnutls,[HAVE_GNU_TLS=1;LIBRARIES="$LIBRARIES gnutls";AC_DEFINE(HAVE_GNU_TLS,1,[GNU TLS installed])])
    AC_SEARCH_LIBS(asn1_length_der,tasn1,[HAVE_TASN1=1;LIBRARIES="$LIBRARIES tasn1";AC_DEFINE(HAVE_TASN1,1,[TASN.1 installed])])
  else
    AC_SEARCH_LIBS(gnutls_global_init,gnutls,[HAVE_GNU_TLS=1;STATIC_LIBRARIES="$STATIC_LIBRARIES gnutls";AC_DEFINE(HAVE_GNU_TLS,1,[GNU TLS installed])])
    AC_SEARCH_LIBS(asn1_length_der,tasn1,[HAVE_TASN1=1;STATIC_LIBRARIES="$STATIC_LIBRARIES tasn1";AC_DEFINE(HAVE_TASN1,1,[TASN.1 installed])])
  fi
fi

AC_CHECK_PTHREAD_DEFINES
AC_CHECK_FUNCS(pthread_attr_setname,pthread.h,,AC_DEFINE(HAVE_PTHREAD_ATTR_SETNAME,1,[pthread_attr_setname() available]))

AC_CHECK_FUNCS(fseeko,,AC_ERROR([function fseeko() is not available]))
AC_CHECK_FUNCS(ftello,,AC_ERROR([function ftello() is not available]))

AC_CHECK_FUNCS(zlibVersion,,AC_ERROR([function zlibVersion() is not available in zlib.h]))

dnl -------------------------------- misc ------------------------------

AC_DEFINE_UNQUOTED(CONFIG_DIR,"$CONFIG_DIR",[configuration directory])
AC_DEFINE_UNQUOTED(TLS_DIR,   "$TLS_DIR",   [TLS directory])

dnl ------------ autoheader: top/bottom include for config.h -----------

AC_CONFIG_HEADERS(bar/config.h)

dnl no AC_DEFINE should occur after this line!

AH_TOP([
#ifndef __CONFIG__
#define __CONFIG__
])

AH_TOP([

#ifndef offsetof
  #define offsetof(type,member) ((size_t)&((type*)0)->member)
#endif /* offsetof */

])

AH_BOTTOM([#endif /* __CONFIG__ */])

dnl --------------------------------------------------------------------

if test "$prefix" = "NONE"; then
  prefix=/usr/local
fi
INSTALL_DIR=$prefix
if test "$bindir" = "\${exec_prefix}/bin"; then
  if test "$exec_prefix" = NONE; then
    INSTALL_BIN_DIR=$prefix/bin
  else
    INSTALL_BIN_DIR=$exec_prefix
  fi
else
  INSTALL_BIN_DIR=$bindir
fi

dnl make files
AC_CONFIG_FILES(Makefile)
AC_CONFIG_FILES(bar/Makefile)
AC_CONFIG_FILES(barcontrol/Makefile)

dnl config files
AC_CONFIG_FILES(barcontrol/src/Config.java)

AC_CONFIG_COMMANDS(BUILD_NOTE,
                   [echo "";
                    echo "Configuration:";
                    echo "  debug version    : `if test "$ENABLE_DEBUG" = "yes"; then echo yes; else echo no; fi`";
                    echo "  dynamic linked   : `if test "$ENABLE_LINK_DYNAMIC" = "yes"; then echo yes; else echo no; fi`";
                    echo "  bzip2 compression: `if test $HAVE_BZ2; then echo yes; else echo no; fi`";
                    echo "  crypto support   : `if test $HAVE_GCRYPT; then echo yes; else echo no; fi`";
                    echo "  FTP support      : `if test $HAVE_FTP; then echo yes; else echo no; fi`";
                    echo "  SCP/SFTP support : `if test $HAVE_SSH2; then echo yes; else echo no; fi`";
                    echo "  TLS/SSL server   : `if test $HAVE_GNU_TLS; then echo yes; else echo no; fi`";
                    echo "  GUI support      : `if test "$ENABLE_GUI" = "yes"; then echo yes; else echo no; fi`";
                    echo "  SWT directory    : $SWT_DIR"
                    echo ""
                    echo "  Install directory: $INSTALL_DIR"
                    echo "  Binary directory : $INSTALL_BIN_DIR"
                    echo "  Config directory : $CONFIG_DIR"
                    echo "  TLS directory    : $TLS_DIR"
                   ],
                   ENABLE_DEBUG=$ENABLE_DEBUG
                   ENABLE_LINK_DYNAMIC=$ENABLE_LINK_DYNAMIC
                   HAVE_BZ2=$HAVE_BZ2
                   HAVE_GCRYPT=$HAVE_GCRYPT
                   HAVE_FTP=$HAVE_FTP
                   HAVE_SSH2=$HAVE_SSH2
                   HAVE_GNU_TLS=$HAVE_GNU_TLS
                   ENABLE_GUI=$ENABLE_GUI
                   SWT_DIR="$SWT_DIR"
                   INSTALL_DIR="$INSTALL_DIR"
                   INSTALL_BIN_DIR="$INSTALL_BIN_DIR"
                   CONFIG_DIR="$CONFIG_DIR"
                   TLS_DIR="$TLS_DIR"
                  )

AC_OUTPUT

dnl --- end of file ---



